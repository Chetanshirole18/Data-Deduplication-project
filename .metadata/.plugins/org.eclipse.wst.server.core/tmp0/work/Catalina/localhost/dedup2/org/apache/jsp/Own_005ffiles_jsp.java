/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2025-03-03 15:06:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import com.deduplication.db.*;
import java.sql.Connection;

public final class Own_005ffiles_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.deduplication.db");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("	<title>View Your Own Uploaded Files Here</title>\r\n");
      out.write("	<link rel=\"favicon\" href=\"assets/images/favicon.png\">\r\n");
      out.write("	<link rel=\"stylesheet\" media=\"screen\" href=\"http://fonts.googleapis.com/css?family=Open+Sans:300,400,700\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"assets/css/bootstrap.min.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"assets/css/font-awesome.min.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"assets/css/bootstrap-theme.css\" media=\"screen\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/da-slider.css\" />\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"assets/css/style.css\">\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 
	if(session.getAttribute("userName")==null)
	{
		 out.print("Please login first");  
         request.getRequestDispatcher("user_signin.jsp").include(request, response);  
	}
	else
	{

      out.write('\r');
      out.write('\n');
 
String nm=(String)session.getAttribute("userName");
session.setAttribute("Username", nm);
      out.write("\r\n");
      out.write("	<div class=\"navbar navbar-inverse\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		<h4 align=\"right\"> <font color=\"red\">Welcome ");
      out.print(session.getAttribute("userName"));
      out.write("</font></h4> \r\n");
      out.write("			<div class=\"navbar-header\">\r\n");
      out.write("				<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button>\r\n");
      out.write("				<a class=\"navbar-brand\" href=\"Index.jsp\">\r\n");
      out.write("					<h4>DEDUPLICATION</h4></a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"navbar-collapse collapse\">\r\n");
      out.write("				<ul class=\"nav navbar-nav pull-right mainNav\">\r\n");
      out.write("					<li class=\"active\"><a href=\"user_home.jsp\">Home</a></li>\r\n");
      out.write("					<li class=\"active\"><a href=\"file_upload.jsp\">Browse File</a></li>\r\n");
      out.write("			    	<li class=\"active\"><a href=\"Own_files.jsp\">Own Files</a></li>\r\n");
      out.write("			    	<li class=\"active\"><a href=\"View_files.jsp\">View Files</a></li>\r\n");
      out.write("			    	<li class=\"active\"><a href=\"downloadRequest.jsp\">View Request</a></li>\r\n");
      out.write("			    	<li class=\"active\"><a href=\"Profile.jsp\">Setting</a></li>\r\n");
      out.write("					<li class=\"active\"><a href=\"LogoutServlet\">Logout</a></li>\r\n");
      out.write("            </ul>     \r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("<div style=\"margin-left: 20px;margin-right: 20px\">\r\n");
      out.write("		 <TABLE class=\"table table-bordered\">\r\n");
      out.write("            <TR class=\"danger\">\r\n");
      out.write("               <TH>ID</TH>\r\n");
      out.write("               <TH>File Name</TH>\r\n");
      out.write("               <TH>File ID</TH>\r\n");
      out.write("               <TH>Download</TH>\r\n");
      out.write("               <TH>Delete</TH>\r\n");
      out.write("           </TR>\r\n");
      out.write("		");
 
        	Connection connection =ConnectionFactory.getInstance().getConnection();
            Statement statement = connection.createStatement();
          
           ResultSet resultset =statement.executeQuery("select * from filestorage where username='"+nm+"'") ; 
			while(resultset.next())
             {
        
      out.write("\r\n");
      out.write("           <TR>\r\n");
      out.write("               <TD> ");
      out.print( resultset.getString(1) );
      out.write("</TD>\r\n");
      out.write("               <TD> ");
      out.print( resultset.getString(2) );
      out.write(" </TD>\r\n");
      out.write("                <TD> ");
      out.print( resultset.getString(5) );
      out.write("</TD>\r\n");
      out.write("               <TD> <a href=\"DownloadFileServlet?id=");
      out.print(resultset.getString(1));
      out.write("&filename=");
      out.print(resultset.getString(2) );
      out.write("&filepath=");
      out.print(resultset.getString(4) );
      out.write("&hash=");
      out.print(resultset.getString(5) );
      out.write("&status=");
      out.print(resultset.getString(7) );
      out.write("\"><input type=\"button\" name=\"Download\" value=\"Download\" class=\"btn btn-info\"></a></TD>\r\n");
      out.write("               <TD> <a href=\"Delete?filename=");
      out.print(resultset.getString(2));
      out.write("&id=");
      out.print(resultset.getString(1) );
      out.write("&filepath=");
      out.print(resultset.getString(4) );
      out.write("&hash=");
      out.print(resultset.getString(5) );
      out.write("&status=");
      out.print(resultset.getString(7) );
      out.write("\"><input type=\"button\" name=\"Delete\" value=\"Delete\" class=\"btn btn-danger\"></a></TD>\r\n");
      out.write("           </TR>\r\n");
      out.write("       ");
 
           } 
       
      out.write("\r\n");
      out.write("         </TABLE>\r\n");
      out.write("				</div>\r\n");

	}

      out.write("\r\n");
      out.write("	<script src=\"assets/js/modernizr-latest.js\"></script>\r\n");
      out.write("	<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"http://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/jquery.cslider.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/custom.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/jquery-1.3.2.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
